plugins {
    id 'maven-publish'
    id 'signing'
}

group = 'io.github.mthebaud'

dependencies {
    // Primitive collections
    implementation 'net.sf.trove4j:trove4j:3.0.3'
    // PatriciaTrie (WordDictionanry)
    implementation 'org.apache.commons:commons-collections4:4.4'
    // IO
    implementation 'com.google.code.gson:gson:2.8.6'

    // Tests
    testImplementation 'ch.qos.logback:logback-classic:1.1.3'
    testImplementation 'org.mockito:mockito-core:2.27.0'
    testImplementation 'junit:junit:4.12'
}

processResources {
    outputs.upToDateWhen { false }

    filesMatching('**predict4all.properties') {
        expand(
                'version': project.version,
                'buildDate': new Date().getTime()
        )
    }
}

javadoc {
    options {
        links += [
                'https://docs.oracle.com/en/java/javase/11/docs/api/',
                'http://javadoc.io/doc/net.sf.trove4j/trove4j/3.0.3'
        ]
        encoding = 'UTF-8'
    }
}

jar {
    manifest {
        attributes 'Automatic-Module-Name': 'org.predict4all.core'
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenCentral(MavenPublication) {
            from components.java
            artifactId = 'predict4all'
            pom {
                name = "Predict4All"
                description = "Predict4All : accurate, fast, lightweight, multilingual, free and open-source next word prediction library"
                url = "https://github.com/mthebaud/predict4all"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "mthebaud"
                        name = "Mathieu THEBAUD"
                        email = "math.thebaud@gmail.com"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/mthebaud/predict4all.git"
                    developerConnection = "scm:git:ssh://github.com:mthebaud/predict4all.git"
                    url = "http://github.com/mthebaud/predict4all/tree/master"
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username System.getenv("OSSRH_USERNAME")
                password System.getenv("OSSRH_TOKEN")
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(System.getenv("SIGN_KEY_ID"), System.getenv("SIGN_KEY"), System.getenv("SIGN_PASSWORD"))
    sign publishing.publications.mavenCentral
}